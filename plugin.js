// Generated by CoffeeScript 1.7.1
(function() {
  var CoffeeScript, async, fs, path,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  CoffeeScript = require('coffee-script');

  path = require('path');

  async = require('async');

  fs = require('fs');

  module.exports = function(env, callback) {
    var CoffeePlugin;
    CoffeePlugin = (function(_super) {
      __extends(CoffeePlugin, _super);

      function CoffeePlugin(_filepath, _text) {
        this._filepath = _filepath;
        this._text = _text;
      }

      CoffeePlugin.prototype.getFilename = function() {
        return this._filepath.relative.replace(/(coffee|litcoffee|coffee\.md)$/, 'js');
      };

      CoffeePlugin.prototype.getView = function() {
        return function(env, locals, contents, templates, callback) {
          var error, js;
          try {
            js = CoffeeScript.compile(this._text, {
              literate: CoffeeScript.helpers.isLiterate(this._filepath.full)
            });
            return callback(null, new Buffer(js));
          } catch (_error) {
            error = _error;
            return callback(error);
          }
        };
      };

      return CoffeePlugin;

    })(env.ContentPlugin);
    CoffeePlugin.fromFile = function(filepath, callback) {
      return fs.readFile(filepath.full, function(error, buffer) {
        if (error) {
          return callback(error);
        } else {
          return callback(null, new CoffeePlugin(filepath, buffer.toString()));
        }
      });
    };
    env.registerContentPlugin('coffee', '**/*.*(coffee|litcoffee|coffee.md)', CoffeePlugin);
    return callback();
  };

}).call(this);
